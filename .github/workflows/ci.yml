# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Running-test:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        # Expose port 5432
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step to set up the Go environment with the specified version (1.15 and compatible versions)
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.15
        id: go
 
      # Step to check out the source code from the repository
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      # Step to install golang-migrate
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.1/migrate.darwin-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate

      # Step to apply database migrations
      - name: Run migration
        run: |
          pwd
          make migrate_up

      # Step to run the tests using the 'make test' command from the Makefile
      - name: Test
        run: make test

