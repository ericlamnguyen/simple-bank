# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and publish image to AWS ECR

on:
  push:
    branches: [ "master" ]

# Permissions needed for this workflow
permissions:
  # The 'id-token' permission is required to authenticate with OIDC (OpenID Connect)
  # It lets GitHub issue a short-lived token that can be verified by AWS to assume an IAM role
  id-token: write
  # The 'contents: read' permission allows actions to read repository content
  contents: read

jobs:
  build:
    name: Build and publish image to AWS ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets from AWS Secret Manager and save to app.env
        run: |
          set -e
          aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq --raw-output 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env
          
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simple-bank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build the Docker image with the version-specific tag
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .

          # Tag the same image as "latest"
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest

          # Push the version-specific tag
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

          # Push the "latest" tag
          docker push $REGISTRY/$REPOSITORY:latest
